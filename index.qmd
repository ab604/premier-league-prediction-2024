```{r}
#| message: false
library(tidyverse)
library(scales)
library(kableExtra)

win_pred <- function(df){dbinom(1:df$matches,df$matches,df$prct_win)}
draw_pred <- function(df){dbinom(1:df$matches,df$matches,df$prct_draw)}

top_four <- tibble(club = c("Liverpool", "Aston_Villa", "Man_City", "Arsenal"),
                   matches_played = c(20,20,19,20),
                   matches = c(rep(18,2),19, 18),
                   wins = c(13,13,12,12),
                   draws = c(6,3,4,4),
                   loss = matches_played - (wins+draws),
                   pts = c(45,42,40,40),
                   prct_win = wins/matches_played,
                   prct_draw = draws/matches_played,
                   prct_loss = loss/matches_played)

t4_wins <- list()
t4_draws <- list()
t4_pred_wins <- NULL
t4_pred_draws <- NULL

for (i in 1:nrow(top_four)) {
  df <- top_four |> slice(i)
 t4_wins[[i]] <- win_pred(df)
 t4_draws[[i]] <- draw_pred(df)
 
 t4_pred_wins[i] <- which.max(t4_wins[[i]])
 t4_pred_draws[i] <- which.max(t4_draws[[i]])
}

preds_long <-  tibble(match = c(rep(1:18,2),1:19,1:18), 
                club = c(rep("Liverpool", 18), rep("Aston_Villa", 18), 
                         rep("Man_City", 19), rep("Arsenal", 18)),
                pred_wins = unlist(t4_wins),
                pred_draws = unlist(t4_draws))

plt_2024 <- preds_long |> 
  ggplot(aes(x = match, y = pred_wins, colour = club)) +
  geom_point(size = 5, shape = 20, position = position_jitter(width = 0.1), alpha = 0.5) + 
  scale_colour_manual(values = c("#EF0107","#670E36","#C8102E","lightblue")) +
  scale_y_continuous(labels = label_percent()) +
  scale_x_continuous(breaks = seq(1,19,1)) + 
  xlab("Matches") + 
  ylab("Chance") +
  theme_classic() +
  theme(legend.title = element_blank(),legend.position = "bottom",
        panel.grid.major.x = element_line()) +
  ggtitle("Predicted wins from remaining Premier League matches")

plt_draws <- preds_long |> 
  ggplot(aes(x = match, y = pred_draws, colour = club)) +
  geom_point(size = 5, shape = 20, alpha = 0.6) + 
  scale_colour_manual(values = c("#EF0107","#670E36","#C8102E","lightblue")) +
  scale_y_continuous(labels = label_percent()) +
  scale_x_continuous(breaks = seq(1,19,1)) + 
  xlab("Matches") + 
  ylab("Chance") +
  theme_classic() +
  theme(legend.title = element_blank(),legend.position = "bottom",
        panel.grid.major.x = element_line()) +
  ggtitle("Predicted draws from remaining Premier League matches")


t4_tbl <- top_four |> mutate(pred_wins = t4_pred_wins,
             pred_draws = t4_pred_draws,
             pred_loss = matches-(pred_wins+pred_draws),
             pred_points = (3*pred_wins)+pred_draws,
             pred_total = pts + pred_points,
             total_matches = matches_played + matches,
             total_wins = wins + pred_wins,
             total_draws = draws + pred_draws,
             total_lost = loss + pred_loss) #|> view()# select(-c(2,4:10))

matches <- 38
top_five <- tibble(club = c("Man_City", "Arsenal", "Man_Utd", "Newcastle", "Liverpool"),
                   matches = rep(38,5),
                   wins = c(28,26,23,19,19),
                   draws = c(5,6,6,14,10),
                   loss = matches - (wins + draws),
                   pts = c(89,84,75,71,67),
                   prct_win = wins/matches,
                   prct_draw = draws/matches,
                   prct_loss = loss/matches)

top_five_wins <- list()
top_five_draws <- list()
pred_wins <- NULL
pred_draws <- NULL

for (i in 1:nrow(top_five)) {
  df <- top_five |> slice(i)
 top_five_wins[[i]] <- win_pred(df)
 top_five_draws[[i]] <- draw_pred(df)
 
 pred_wins[i] <- which.max(top_five_wins[[i]])
 pred_draws[i] <- which.max(top_five_draws[[i]])
}



t5_tbl <- top_five |> select(Club = club, Matches = matches,
                   Wins = wins, Draws = draws, Losses = loss,
                   Points = pts, "% Won" = prct_win, "% Draw" = prct_draw,
                   "% Lost" = prct_loss) |> 
  kable(digits = 3) |> kable_styling("striped")

liv_six <- tibble(win = c(21,30,32,20,28,19),
                  draw = c(12,7,3,9,8,10),
                  lose = c(5,1,3,9,2,9),
                  played = rep(38,6))

liv_avg <- liv_six |> 
  summarise(win_pct = sum(win)/sum(played),
            drw_pct = sum(draw)/sum(played),
            loss_pct = sum(lose)/sum(played))

mc_six <- tibble(win = c(32,32,26,27,29,28),
                  draw = c(4,2,3,5,6,5),
                  lose = c(2,4,9,6,3,5),
                  played = rep(38,6))

mc_avg <- mc_six |> 
  summarise(win_pct = sum(win)/sum(played),
            drw_pct = sum(draw)/sum(played),
            loss_pct = sum(lose)/sum(played))


mc <- top_four |> filter(club == "Man_City") |> mutate(prct_win = 174/228, 
             prct_draw = 25/228)

liv <- top_four |> filter(club == "Liverpool") |> mutate(prct_win = 150/228, 
              prct_draw = 49/228)

mc_liv <- bind_rows(mc,liv)

mc_wins <- list()
mc_draws <- list()
pred_mc_wins <- NULL
pred_mc_draws <- NULL

for (i in 1:nrow(mc_liv)) {
  df <- mc_liv |> slice(i)
 mc_wins[[i]] <- win_pred(df)
 mc_draws[[i]] <- draw_pred(df)
 
 pred_mc_wins[i] <- which.max(mc_wins[[i]])
 pred_mc_draws[i] <- which.max(mc_draws[[i]])
}

mc_long <-  tibble(match = c(1:19,1:18),
                club = c(rep("Man_City", 19),rep("Liverpool", 18)),
                pred_wins = unlist(mc_wins),
                pred_draws = unlist(mc_draws))

plt_mean <- mc_long |>
  ggplot(aes(x = match, y = pred_wins, colour = club)) +
  geom_point(size = 5, shape = 20) +
  scale_colour_manual(values = c("#C8102E","lightblue")) +
  scale_y_continuous(labels = label_percent()) +
  scale_x_continuous(breaks = seq(1,19,1)) +
  xlab("Matches") +
  ylab("Chance") +
  theme_classic() +
  theme(legend.title = element_blank(),legend.position = "bottom",
        panel.grid.major.x = element_line()) +
  ggtitle("Predicted wins from remaining Premier League matches\nif form regresses to mean.")

plt_mean_dr <- mc_long |>
  ggplot(aes(x = match, y = pred_draws, colour = club)) +
  geom_point(size = 5, shape = 20) +
  scale_colour_manual(values = c("#C8102E","lightblue")) +
  scale_y_continuous(labels = label_percent()) +
  scale_x_continuous(breaks = seq(1,19,1)) +
  xlab("Matches") +
  ylab("Chance") +
  theme_classic() +
  theme(legend.title = element_blank(),legend.position = "bottom",
        panel.grid.major.x = element_line()) +
  ggtitle("Predicted draws from remaining Premier League matches\nif form regresses to mean.")


tbl_mc_2024 <- mc_liv |> mutate(pred_wins = pred_mc_wins,
             pred_draws = pred_mc_draws,
             pred_loss = matches-(pred_wins+pred_draws),
             pred_points = (3*pred_wins)+pred_draws,
             pred_total = pts + pred_points, 
             total_matches = matches_played + matches,
             total_wins = wins + pred_wins,
             total_draws = draws + pred_draws,
             total_lost = loss + pred_loss) #|> view() 
  # |>  select(-c(2,4:10)) |> arrange(desc(pred_total))
```

# Summary {#sec-summary}

At the half-way point in the 2023/24 Premier League season, I was reading the ESPN article [What's wrong at Arsenal?](https://www.espn.co.uk/football/insider/insider/story/_/id/39241757/explaining-arsenal-losses-investigation-stats-analysis). It's really good and full of complicated analysis using expected goals, heatmaps and the inevitable nod to AI. It ends on Arsenal's chances of winning the league at 11% on January 5th 2024.

I'd previously read Oliver Johnson's Substack on [New Year's resolutions](https://bristoliver.substack.com/p/the-edge-is-everything) which included a binomial model of Ronny O'Sullivan's frame win rate.

Just for fun, I wondered how a binomial model would compete with more sophisticated models for predicting the outcome of the second half of the Premier League season.

@sec-the-model has more details, but if the top four hold their form, then a simple maximum probability prediction from binomial distributions predicts Liverpool to win the league as shown in @tbl-2024.

In the current season Manchester City with 63% and 16% win and draw rates respectively are performing well below average of a win rate of `r round(100*(174/228),0)`% and draw rate of `r round(100*(25/228),0)`% in the last six seasons.

Meanwhile Liverpool have a win rate of `r round(100*(150/228),0)`% and draw rate of `r round(100*(49/228),0)`% over the same period, close their current 65% win rate. Their draw rate for the current season is above average at 30%

Assuming there is regression to the mean, I also calculated @tbl-2024-mean for their six season mean win rates for Manchester City and Liverpool for the remaining matches. In this scenario Manchester City beat Liverpool by two points.

I don't expect these models to stand up well, but they show how fine the margins are. A regression to the mean in draw rate for Liverpool corresponding with a corresponding change for Manchester City is enough to change the outcome.

It would be a surprise if Aston Villa won the league, an even bigger one if Arsenal somehow won.

It would also be surprising if any team ran away with the title, so it should be an exciting second half to the season whatever happens.

```{r}
#| label: tbl-2024
#| tbl-cap: Final predictions for 2023/24 season using form from first half of the season.
t4_tbl |> select(Club = club, Matches = total_matches,
                   "Pred. Wins" = total_wins, "Pred. Draws" = total_draws, "Pred. Lost" = total_lost,
                   "Pred. Points" = pred_points, "Pred. Total" = pred_total) |> 
  kable(digits = 3) |> kable_styling("striped")
```

```{r}
#| label: tbl-2024-mean
#| tbl-cap: Regression to the mean prediction for Manchester City and Liverpool for 2023/24.
tbl_mc_2024 |> select(Club = club, Matches = total_matches,
                   "Pred. Wins" = total_wins, "Pred. Draws" = total_draws, "Pred. Lost" = total_lost,
                   "Pred. Points" = pred_points, "Pred. Total" = pred_total) |> 
  kable(digits = 3) |> kable_styling("striped")
```

## The model {#sec-the-model}

I got data for the 2023/24 seasons from [Footystats](https://footystats.org/england/premier-league#), and from Wikipedia for [Liverpool's seasons](https://en.wikipedia.org/wiki/List_of_Liverpool_F.C._seasons) and [Manchester City's seasons](https://en.wikipedia.org/wiki/List_of_Manchester_City_F.C._seasons).

@tbl-prem-league-2024 shows the statistics for the top four positions on the 2nd of January 2024.

```{r}
#| label: tbl-prem-league-2024
#| tbl-cap: Statistics for top four teams in 2023/24 season on January 2nd 2024
top_four |> kable(digits = 3) |> kable_styling("striped")
```

I used the win and draw percentages for each team and their number of remaining matches to generate binomial distributions of the probability of the total number of wins or draws. In the form `dbinom(1:x,x,y)` where `x` is the number of matches and `y` is the probability of winning or drawing.

@fig-pred-wins-2024 shows the distribution for wins and @fig-pred-draws-2024 shows the distribution for the draws.

For a point prediction, I then used the maximum probabilities for wins and draws to calculate the points accrued and subsequent points total for each team for @tbl-2024.

```{r}
#| label: fig-pred-wins-2024
#| fig-cap: Binomial distribution of wins for remaining matches based on form from first half of the season for the top four teams.
plt_2024
```

```{r}
#| label: fig-pred-draws-2024
#| fig-cap: Binomial distribution of draws for remaining matches based on form from first half of the season for the top four teams.
plt_draws
```

I repeated this using the six year win and draw averages for Manchester City and Liverpool (@tbl-means) which yields @fig-pred-wins-mean and @fig-pred-draws-mean respectively. And @tbl-2024-mean.

```{r}
#| label: tbl-means
#| tbl-cap: Six year Premier League averages for Manchester City and Liverpool
mc_liv |> mutate(prct_loss = 1-(prct_win+prct_draw)) |> 
  select(club, prct_win, prct_draw, prct_loss) |> 
  kable(digits = 3) |> kable_styling("striped")
```

```{r}
#| label: fig-pred-wins-mean
#| fig-cap: Binomial distribution of wins for remaining matches based on a regression to mean form for Liverpool and Manchester City.
plt_mean
```

```{r}
#| label: fig-pred-draws-mean
#| fig-cap: Binomial distribution of draws for remaining matches based on a regression to mean form for Liverpool and Manchester City.
plt_mean_dr
```
